{"version":3,"file":"component---src-pages-portfolio-js-39bdb879be9da5dab317.js","mappings":"qMAAA,EAAe,IAA0B,mECAzC,EAAe,IAA0B,sD,oBCmCzC,MAvBe,IAAgB,IAAf,MAAEA,GAAO,EACrB,MAAM,SAAEC,EAAQ,kBAAEC,IAAsBC,EAAAA,EAAAA,YAAWC,EAAAA,GAC7CC,EAAeJ,EAAWK,EAAiBC,EAEjD,OACI,uBAAKC,UAAU,WACX,uBAAKC,GAAG,kBACJ,0BAAKT,IAGT,uBAAKQ,UAAU,wBACX,gBAAC,EAAAE,KAAI,CAACC,GAAG,eAAeN,EAAaO,OAAOC,MAC5C,gBAAC,EAAAH,KAAI,CAACC,GAAG,oBAAoBN,EAAaO,OAAOE,WACjD,gBAAC,EAAAJ,KAAI,CAACC,GAAG,gBAAgBN,EAAaO,OAAOG,OAC7C,gBAAC,EAAAL,KAAI,CAACC,GAAG,iBAAiBN,EAAaO,OAAOI,UAGlD,uBAAKR,UAAS,eAAiBP,EAAgB,SAAL,IAAiBgB,QAASf,EAAmBgB,IAAKC,IAC5F,uBAAKX,UAAS,eAAgBP,EAAW,GAAK,UAAYgB,QAASf,EAAmBgB,IAAKE,IACzF,ECHd,MAtBe,IAAgC,IAA/B,SAAEC,EAAQ,YAAEC,GAAa,GAE1BC,EAAAA,EAAAA,gBAAe,cAU5B,OACI,gCACE,2BACI,gBAAC,EAAM,CAACvB,MAAOsB,IACf,4BAAOD,IAEZ,C,+CCoBP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEG,EAAW,MAAExB,EAAK,SAAEqB,GAAU,EAC3C,MAAM,KAAEI,IAASF,EAAAA,EAAAA,gBAAe,YAc1BG,EAAkBF,GAAeC,EAAKE,aAAaH,YACnDI,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmB3B,MAExC,OACE,gCACE,6BAAQ4B,EAAkB5B,EAAK,MAAM4B,EAAiB5B,GACtD,wBAAM6B,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAS9B,IACnC,wBAAM+B,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAL,EAAKE,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAAS9B,IACpC,wBAAM6B,KAAK,sBAAsBC,QAASJ,IACzCL,EAGP,C,qKCvBA,MAfkB,IAAiC,IAAhC,UAAEY,EAAS,OAAEC,EAAS,IAAI,EACzC,OACI,uBAAK1B,UAAU,cACX,0BAAKyB,GACL,0BACKC,EAAOC,KAAI,CAACC,EAAOC,IAChB,sBAAIC,IAAKD,EACLE,wBAAyB,CAAEC,OAAQJ,QAI7C,ECFd,MAeaK,EAAO,IAAM,gBAAC,IAAG,CAACzC,MAAM,SAErC,MAjBsB,KAClB,MAAM,SAAEC,EAAQ,EAAEyC,IAAMvC,EAAAA,EAAAA,YAAWC,EAAAA,GAC7BC,EAAeJ,EAAWK,EAAiBC,EAGjD,OACI,gBAAC,IAAM,CAACe,YAAajB,EAAasC,cAAc3C,OAC5C,uBAAKQ,UAAU,oBACVH,EAAasC,cAAcC,WAAWT,KAAI,CAACU,EAAWR,IACnD,gBAAC,EAAS,CAACC,IAAKD,EAAOJ,UAAWY,EAAUZ,UAAWC,OAAQW,EAAUX,YAG5E,C","sources":["webpack://gatsby-starter-default/./src/images/german-flag-reversed.png","webpack://gatsby-starter-default/./src/images/uk-flag.png","webpack://gatsby-starter-default/./src/components/NavBar.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/components/SkillCard.js","webpack://gatsby-starter-default/./src/pages/portfolio.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/german-flag-reversed-071857a93c1b37a7200e4262f50b1db2.png\";","export default __webpack_public_path__ + \"static/uk-flag-781c4ff93c4f6343716b3ff3815dfb61.png\";","import React, { useContext } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./NavBar.css\";\r\n\r\nimport TranslationContext from '../context/TranslationContext';\r\n\r\nimport germanFlag from \"../images/german-flag-reversed.png\"\r\nimport ukFlag from \"../images/uk-flag.png\"\r\n\r\nimport enTranslations from '../strings/en.json';\r\nimport deTranslations from '../strings/de.json';\r\n\r\nconst NavBar = ({ title }) => {\r\n    const { isGerman, toggleTranslation } = useContext(TranslationContext);\r\n    const translations = isGerman ? deTranslations : enTranslations;\r\n\r\n    return (\r\n        <div className=\"top-nav\">\r\n            <div id=\"left-container\">\r\n                <h1>{title}</h1>             \r\n            </div>\r\n\r\n            <nav className=\"navigation-container\">\r\n                <Link to=\"/home/#home\">{translations.navBar.home}</Link>\r\n                <Link to=\"/home/#portfolio\">{translations.navBar.portfolio}</Link>\r\n                <Link to=\"/home/#about\">{translations.navBar.about}</Link>\r\n                <Link to=\"/home#contact\">{translations.navBar.contact}</Link>\r\n            </nav>\r\n\r\n            <img className={`flag-image ${!isGerman ? '' : 'hidden'}`} onClick={toggleTranslation} src={germanFlag} />\r\n            <img className={`flag-image ${isGerman ? '' : 'hidden'}`} onClick={toggleTranslation} src={ukFlag} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./layout.css\"\r\nimport NavBar from \"../components/NavBar\";\r\n\r\nconst Layout = ({ children, navbarTitle }) => {\r\n    // TODO: check what it is for\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n      <>\r\n        <div>\r\n            <NavBar title={navbarTitle} />\r\n            <main>{children}</main>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"./SkillCard.css\";\r\n\r\nconst SkillCard = ({ areaTitle, skills = [] }) => {\r\n    return (\r\n        <div className=\"skill-card\">\r\n            <h2>{areaTitle}</h2>\r\n            <ul>\r\n                {skills.map((skill, index) => (\r\n                    <li key={index}\r\n                        dangerouslySetInnerHTML={{ __html: skill }}\r\n                        />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkillCard;","import React, { useContext } from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nimport enTranslations from '../strings/en.json';\r\nimport deTranslations from '../strings/de.json';\r\n\r\nimport TranslationContext from '../context/TranslationContext';\r\n\r\nimport SkillCard from \"../components/SkillCard\";\r\n\r\n\r\nconst PortfolioPage = () => { \r\n    const { isGerman, _ } = useContext(TranslationContext);\r\n    const translations = isGerman ? deTranslations : enTranslations;\r\n\r\n\r\n    return (\r\n        <Layout navbarTitle={translations.portfolioPage.title}>\r\n            <div className=\"skill-card-table\">\r\n                {translations.portfolioPage.skillCards.map((skillCard, index) => (\r\n                    <SkillCard key={index} areaTitle={skillCard.areaTitle} skills={skillCard.skills} />\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )}\r\n\r\nexport const Head = () => <Seo title=\"Home\" />\r\n\r\nexport default PortfolioPage\r\n"],"names":["title","isGerman","toggleTranslation","useContext","TranslationContext","translations","deTranslations","enTranslations","className","id","Link","to","navBar","home","portfolio","about","contact","onClick","src","germanFlag","ukFlag","children","navbarTitle","useStaticQuery","description","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","areaTitle","skills","map","skill","index","key","dangerouslySetInnerHTML","__html","Head","_","portfolioPage","skillCards","skillCard"],"sourceRoot":""}